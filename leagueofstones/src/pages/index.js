import Head from "next/head";
import ImageDesc from "./components/ImageDesc";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import 'bootstrap/dist/css/bootstrap.min.css';

export default function Home() {
  const [listesChampions, setlistesChampions] = useState([]);
  const [listesChSelectionnes, setlistesChSelectionnes] = useState([]);

  useEffect(() => {
    getCards();
  }, []);

  const deplacerChampion = (desc) => {
    const estDansAllChmpions = listesChampions.some(champi => champi.key === desc.key);
    if (estDansAllChmpions) {
      setlistesChSelectionnes([...listesChSelectionnes, desc]);
      setlistesChampions(listesChampions.filter(champi => champi.key !== desc.key));
    } else {
      setlistesChampions([...listesChampions, desc]);
      setlistesChSelectionnes(listesChSelectionnes.filter(champi => champi.key !== desc.key));
    }
  };

  const getCards = () => {
    fetch("http://localhost:3001/cards")
      .then(response => {
        if (!response.ok) {
          throw new Error("HTTP error " + response.status);
        }
        return response.json();
      })
      .then(data => {
        data.forEach(elmt => { elmt.selected = "false"; });
        setlistesChampions(data);
      })
      .catch(error => console.error("Error:", error));
  };

  return (
    <>
      <Head>
        <title>League of Stones</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className={`${styles.bodyContainer} container-fluid p-1 `}>
        <main className="p-0">
          <section className="row d-flex ">
            {/* Colonne des champions récupérés */}
            <section className={`${styles.recuperes} col-6 border border-dark rounded p-1`}>
              <h1 className="text-center mb-4">Ici les champions récupérés</h1>
              <div className="row">
                {listesChampions.map((card, index) => (
                  <div key={index} className="col-12 col-lg-3 mb-2">
                    <ImageDesc desc={card} deplacer={deplacerChampion} />
                  </div>
                ))}
              </div>
            </section>

            {/* Colonne des champions sélectionnés */}
            <section className={`${styles.selectionnes} col-6 border border-dark rounded p-1`}>
              <h1 className="text-center mb-4">Ici les cartes sélectionnées</h1>
              <div className="row">
                {listesChSelectionnes.map((card, index) => (
                  <div key={index} className="col-12 col-lg-3 mb-2">
                    <ImageDesc desc={card} deplacer={deplacerChampion} />
                  </div>
                ))}
              </div>
            </section>
          </section>
        </main>
      </section>
    </>
  );
}